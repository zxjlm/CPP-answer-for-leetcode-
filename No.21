/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int max(ListNode *l1) {
        ListNode *p=l1;
        while (p->next != NULL) {
            p = p->next;
        }
        return p->val;
    }   
    
    
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
    ListNode *tmp1 = new ListNode(-99999);
    if(l1==NULL) return l2;
    if(l2==NULL) return l1;
        if(max(l1)>max(l2)){
            return mergeTwoLists(l2,l1);
        } else {
            ListNode *l1head = l1, *p = l2;
            if (p->next == NULL ||max(l1)<p->val) {
                while (l1head->next!=NULL) l1head=l1head->next;
                l1head->next=l2;
                return l1;
            }
             else {
                tmp1->next=l2;
                p=tmp1;
                while (p->next != NULL && l1head != NULL) {
                    if (p->next->val >= l1head->val) {
                        ListNode *tmp = new ListNode(l1head->val);
                        l1head = l1head->next;
                        tmp->next = p->next;
                        p->next = tmp;
                    }
                    p = p->next;
                }
            }
        }
    return tmp1->next;
}
};
