//4ms

//相比较与No.193，加入了一个分类讨论，也就是把第一家算进去和不把第一家算进去这两种情况。
//最后取这两种情况中的最大值的最大值。

class Solution {
public:
    int rob(vector<int>& nums) {
        vector<int> dp(nums);
        if(nums.size()==0) return 0;
        else if(nums.size()==1) return nums[0];
        else if(nums.size()==2) return max(nums[0],nums[1]);
        else if(nums.size()==3) return max(max(nums[0],nums[1]),nums[2]);
        else{
            nums[2]=nums[0]+nums[2];
            for (int i=3;i<nums.size()-1;i++){
                nums[i]=max(nums[i-2]+nums[i],nums[i-3]+nums[i]);
            }
            dp[0]=0;
            for (int i=3;i<dp.size();i++){
                dp[i]=max(dp[i-2]+dp[i],dp[i-3]+dp[i]);
            }
        }
        return max(max(dp[dp.size()-1],dp[dp.size()-2]),max(nums[nums.size()-2],nums[nums.size()-3]));
    }
};
